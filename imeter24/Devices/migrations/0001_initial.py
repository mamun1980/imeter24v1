# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-09-09 09:12
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Contacts', '0001_initial'),
        ('Config', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Devices_Config',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('datecreated', models.DateTimeField(blank=True, null=True, verbose_name=b'Device Created')),
                ('locationid', models.TextField(blank=True, default=None, max_length=100, null=True, verbose_name=b'Location')),
                ('lastdbread', models.DateTimeField(blank=True, null=True, verbose_name=b'Last DB Read')),
                ('device_disabled', models.BooleanField(default=False, verbose_name=b'Disabled')),
                ('comments', models.TextField(blank=True, default=None, max_length=100, null=True, verbose_name=b'Comments')),
                ('device_filename', models.CharField(blank=True, max_length=40, null=True, verbose_name=b'Access File')),
                ('device_login', models.CharField(blank=True, max_length=32, null=True, verbose_name=b'Login Id or MAC Address')),
                ('device_port', models.CharField(blank=True, max_length=40, null=True, verbose_name=b'Device Port')),
                ('device_address', models.IntegerField(blank=True, null=True, verbose_name=b'ModBus')),
                ('device_register', models.IntegerField(blank=True, null=True, verbose_name=b'Register')),
                ('device_serial_number', models.BigIntegerField(blank=True, null=True, verbose_name=b'Device Serial Number')),
                ('device_firmware', models.IntegerField(blank=True, null=True, verbose_name=b'Firmware Revision')),
                ('device_oem', models.CharField(blank=True, max_length=3, null=True, verbose_name=b'OEM')),
                ('device_model', models.IntegerField(blank=True, null=True, verbose_name=b'Device ID From Meter')),
                ('device_v_multiplier', models.IntegerField(blank=True, null=True, verbose_name=b'V Multiplier')),
                ('device_v_divider', models.IntegerField(blank=True, null=True, verbose_name=b'V Divider')),
                ('device_i_multiplier', models.IntegerField(blank=True, null=True, verbose_name=b'I Multiplier')),
                ('device_i_divider', models.IntegerField(blank=True, null=True, verbose_name=b'I Divider')),
                ('device_p_multiplier', models.IntegerField(blank=True, null=True, verbose_name=b'P Multiplier')),
                ('device_p_divider', models.IntegerField(blank=True, null=True, verbose_name=b'P Divider')),
                ('device_agl_multiplier', models.IntegerField(blank=True, null=True, verbose_name=b'AGL Multiplier')),
                ('device_agl_divider', models.IntegerField(blank=True, null=True, verbose_name=b'AGL Divider')),
                ('device_elements', models.IntegerField(blank=True, null=True, verbose_name=b'Elements')),
                ('device_numberofmeters', models.IntegerField(blank=True, null=True, verbose_name=b'Number of Meters')),
                ('modelid', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='devices_config_modelid', to='Config.Config_Hardware_Type')),
                ('siteid', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='siteid_devices_config', to='Contacts.Contacts')),
                ('soldto', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='soldto_devices_config', to='Contacts.Contacts')),
            ],
            options={
                'ordering': ['soldto', 'siteid'],
                'db_table': 'device_config',
                'verbose_name': 'Device Config',
                'verbose_name_plural': 'Device Config',
            },
        ),
        migrations.CreateModel(
            name='Devices_Data',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('datecreated', models.DateTimeField(blank=True, null=True, verbose_name=b'Read Created')),
                ('locationid', models.TextField(blank=True, default=None, max_length=100, null=True, verbose_name=b'Location')),
                ('comments', models.TextField(blank=True, default=None, max_length=100, null=True, verbose_name=b'Comments')),
                ('login', models.CharField(blank=True, max_length=32, null=True, verbose_name=b'Login Id or MAC Address')),
                ('device_address', models.IntegerField(blank=True, null=True, verbose_name=b'ModBus')),
                ('device_register', models.IntegerField(blank=True, null=True, verbose_name=b'Register')),
                ('device_serial_number', models.BigIntegerField(blank=True, null=True, verbose_name=b'Device Serial Number')),
                ('device_read_status', models.CharField(blank=True, max_length=20, null=True, verbose_name=b'Read Status')),
                ('data_timestamp', models.DateTimeField(blank=True, null=True, verbose_name=b'Actual Read')),
                ('data_active_phase', models.IntegerField(blank=True, null=True, verbose_name=b'Active Phase')),
                ('data_voltage_a', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'Voltage A')),
                ('data_voltage_b', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'Voltage B')),
                ('data_voltage_c', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'Voltage C')),
                ('data_current_a', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'Current A')),
                ('data_current_b', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'Current B')),
                ('data_current_c', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'Current C')),
                ('data_watts_a', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'Wattage A')),
                ('data_watts_b', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'Wattage B')),
                ('data_watts_c', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'Wattage C')),
                ('data_va_a', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'VA Reading A')),
                ('data_va_b', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'VA Reading B')),
                ('data_va_c', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'VA Reading C')),
                ('data_var_a', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'VAR Reading A')),
                ('data_var_b', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'VAR Reading B')),
                ('data_var_c', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'VAR REading C')),
                ('data_power_factor_a', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'Power Factor A')),
                ('data_power_factor_b', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'Power Factor B')),
                ('data_power_factor_c', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'Power Factor C')),
                ('data_kwatts', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'Total kWh')),
                ('data_kva', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'Total kVAh')),
                ('data_frequency', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'Frequency')),
                ('data_voltage_average', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'kVARh Avg')),
                ('data_total_current', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'Total Current (This Read)')),
                ('data_total_watts', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'Total Wattage (This Read)')),
                ('data_total_va', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'Total VA (This Read)')),
                ('remote_id', models.IntegerField(blank=True, null=True, verbose_name=b'Remote Record ID')),
                ('modelid', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='devices_data_modelid', to='Config.Config_Hardware_Type')),
                ('siteid', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='siteid_devices_data', to='Contacts.Contacts')),
                ('soldto', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='soldto_devices_data', to='Contacts.Contacts')),
            ],
            options={
                'ordering': ['soldto', 'siteid'],
                'db_table': 'device_data',
                'verbose_name': 'Meter Device Read Data',
                'verbose_name_plural': 'Meter Device Read Data',
            },
        ),
        migrations.CreateModel(
            name='Devices_Displays',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('datecreated', models.DateTimeField(blank=True, null=True, verbose_name=b'Read Created')),
                ('locationid', models.TextField(blank=True, default=None, max_length=100, null=True, verbose_name=b'Location')),
                ('device_address', models.IntegerField(blank=True, null=True, verbose_name=b'ModBus')),
                ('device_register', models.IntegerField(blank=True, null=True, verbose_name=b'Register')),
                ('device_serial_number', models.BigIntegerField(blank=True, null=True, verbose_name=b'Device Serial Number')),
                ('device_read_status', models.CharField(blank=True, max_length=20, null=True, verbose_name=b'Read Status')),
                ('data_timestamp', models.DateTimeField(blank=True, null=True, verbose_name=b'Actual Read')),
                ('message_sent', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Message Sent')),
                ('modelid', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='devices_displays_modelid', to='Config.Config_Hardware_Type')),
                ('siteid', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='siteid_devices_displays', to='Contacts.Contacts')),
                ('soldto', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='soldto_devices_displays', to='Contacts.Contacts')),
            ],
            options={
                'ordering': ['soldto', 'siteid'],
                'db_table': 'device_displays',
                'verbose_name': 'Display History Data',
                'verbose_name_plural': 'Display History Data',
            },
        ),
        migrations.CreateModel(
            name='Devices_Relay_Contact_Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relay_number', models.IntegerField(verbose_name=b'Relay')),
                ('relay_description', models.CharField(blank=True, max_length=32, null=True, verbose_name=b'Description')),
                ('relay_state', models.BooleanField(default=False, verbose_name=b'State')),
            ],
        ),
        migrations.CreateModel(
            name='Devices_Relays',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('datecreated', models.DateTimeField(blank=True, null=True, verbose_name=b'Read Created')),
                ('locationid', models.TextField(blank=True, default=None, max_length=100, null=True, verbose_name=b'Location')),
                ('device_address', models.IntegerField(blank=True, null=True, verbose_name=b'ModBus')),
                ('device_register', models.IntegerField(blank=True, null=True, verbose_name=b'Register')),
                ('device_serial_number', models.BigIntegerField(blank=True, null=True, verbose_name=b'Device Serial Number')),
                ('device_read_status', models.CharField(blank=True, max_length=20, null=True, verbose_name=b'Read Status')),
                ('data_timestamp', models.DateTimeField(blank=True, null=True, verbose_name=b'Actual Read')),
                ('modelid', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='devices_relays_modelid', to='Config.Config_Hardware_Type')),
                ('siteid', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='siteid_devices_relays', to='Contacts.Contacts')),
                ('soldto', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='soldto_devices_relays', to='Contacts.Contacts')),
            ],
            options={
                'ordering': ['soldto', 'siteid'],
                'db_table': 'device_relays',
                'verbose_name': 'Relay Status Data',
                'verbose_name_plural': 'Relay Status Data',
            },
        ),
        migrations.AddField(
            model_name='devices_relay_contact_status',
            name='relay_form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_relays_unit', to='Devices.Devices_Relays'),
        ),
    ]
