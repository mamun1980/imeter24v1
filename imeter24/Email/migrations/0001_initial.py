# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-09-09 09:12
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlackListServers',
            fields=[
                ('server', models.CharField(max_length=64, primary_key=True, serialize=False, unique=True, verbose_name=b'Server')),
                ('servername', models.CharField(blank=True, default=b'', max_length=128, null=True, verbose_name=b'Name')),
                ('serverlink', models.CharField(blank=True, default=b'', max_length=200, null=True, verbose_name=b'Link')),
                ('active', models.BooleanField(verbose_name=b'Active')),
                ('comments', models.TextField(blank=True, default=b'', max_length=200, null=True, verbose_name=b'Comments')),
            ],
            options={
                'ordering': ['server'],
                'db_table': 'black_list_servers',
                'verbose_name': 'Black List Server',
                'verbose_name_plural': "Black List Server's",
            },
        ),
        migrations.CreateModel(
            name='IpBlock',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('program', models.CharField(blank=True, choices=[(b'ALL', b'All'), (b'SSHD', b'SSH Access'), (b'MAIL', b'Mail Server')], default=b'ALL', max_length=15, null=True, verbose_name=b'Program')),
                ('ipaddress', models.CharField(max_length=40, null=True, verbose_name=b'IP Address')),
                ('action', models.CharField(blank=True, choices=[(b'A', b'Allow'), (b'D', b'Deny')], default=b'D', max_length=15, null=True, verbose_name=b'Action')),
                ('comments', models.TextField(blank=True, default=b'Denied due to Unauthorized Use', max_length=200, null=True, verbose_name=b'Comments')),
            ],
            options={
                'ordering': ['program'],
                'db_table': 'blocked_ip',
                'verbose_name': "Blocked IP's",
                'verbose_name_plural': "Blocked Ip's",
            },
        ),
        migrations.CreateModel(
            name='IpCount',
            fields=[
                ('ipaddress', models.GenericIPAddressField(primary_key=True, serialize=False, unique=True, verbose_name=b'IP Address')),
                ('counthour', models.IntegerField(blank=True, default=b'0', null=True, verbose_name=b'Current IP Count This Hour')),
                ('counttotal', models.IntegerField(blank=True, default=b'0', null=True, verbose_name=b'Total IP Count to Date')),
                ('comments', models.TextField(blank=True, default=b'', max_length=500, null=True, verbose_name=b'Comments')),
            ],
            options={
                'ordering': ['ipaddress'],
                'db_table': 'ip_count',
                'verbose_name': 'IP Count',
                'verbose_name_plural': 'IP Counts',
            },
        ),
        migrations.CreateModel(
            name='TMDA_Blacklist',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=64, null=True, verbose_name=b'SCOM Username')),
                ('address', models.CharField(max_length=64, null=True, verbose_name=b'TMDA Match Address')),
            ],
            options={
                'ordering': ['username', 'address'],
                'db_table': 'tmda_blacklist',
                'verbose_name': 'TMDA Blacklist',
                'verbose_name_plural': 'TMDA Blacklist',
            },
        ),
        migrations.CreateModel(
            name='TMDA_Whitelist',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=64, null=True, verbose_name=b'SCOM Username')),
                ('address', models.CharField(max_length=64, null=True, verbose_name=b'TMDA Match Address')),
            ],
            options={
                'ordering': ['username', 'address'],
                'db_table': 'tmda_whitelist',
                'verbose_name': 'TMDA Whitelist',
                'verbose_name_plural': 'TMDA Whitelist',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('username', models.EmailField(max_length=64, primary_key=True, serialize=False, unique=True)),
                ('password', models.CharField(max_length=64)),
                ('domain', models.CharField(max_length=64)),
                ('status', models.BooleanField(verbose_name=b'Account Enabled?')),
                ('destination', models.EmailField(max_length=64)),
                ('source', models.EmailField(max_length=64)),
                ('accountid', models.CharField(max_length=10, verbose_name=b'Account Number')),
                ('mailscanner', models.BooleanField(verbose_name=b'Mail Scanner?')),
                ('virusscanner', models.BooleanField(verbose_name=b'Virus Scanner?')),
                ('poweruser', models.BooleanField(verbose_name=b'Power User?')),
                ('action', models.CharField(blank=True, choices=[(b'A', b'Add account to cyrus'), (b'D', b'Delete account from cyrus')], max_length=1, null=True, verbose_name=b'User action pending')),
                ('accountsize', models.CharField(blank=True, max_length=20, null=True, verbose_name=b'Mailbox Size')),
                ('last_updated', models.DateField(blank=True, null=True, verbose_name=b'Mail Box Last Updated')),
                ('last_accessed', models.DateField(blank=True, null=True, verbose_name=b'Mail Box Last Accessed')),
                ('last_updated_time', models.TimeField(blank=True, null=True, verbose_name=b'Mail Box Last Updated')),
                ('last_accessed_time', models.TimeField(blank=True, null=True, verbose_name=b'Mail Box Last Updated')),
                ('messagecount', models.CharField(blank=True, max_length=15, null=True, verbose_name=b'Message Count')),
                ('daystoholdemails', models.IntegerField(blank=True, default=b'0', null=True, verbose_name=b'Days Till Deletion')),
                ('currentcount', models.IntegerField(blank=True, default=b'0', null=True, verbose_name=b'Current Hourly Count')),
                ('maxcount', models.IntegerField(blank=True, default=b'0', null=True, verbose_name=b'Max Threshold')),
            ],
            options={
                'ordering': ['username'],
                'db_table': 'email_users',
                'verbose_name': 'User',
                'verbose_name_plural': 'User List',
            },
        ),
    ]
